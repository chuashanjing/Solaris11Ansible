- hosts: solaris
  become: true
  become_method: sudo
  vars:
    ansible_python_interpreter: /usr/local/python-3.6/bin/python3
    ansible_become_pass: '<your solaris machine password>'

  tasks:
    - name: '9.2 Check for Duplicate User Names'
      shell: |
        getent passwd | cut -f1 -d":" | sort -n | uniq -c | while read x ; do 
        [ -z "${x}" ] && break 
        set - $x 
        if [ $1 -gt 1 ]; then 
        gids=`getent passwd | nawk -F: '($1 == n) { print $3 }' n=$2 | xargs` 
        echo "Duplicate User Name ($2): ${gids}" 
        fi 
        done 
      register: dup
      ignore_errors: true

    - name: dup output
      debug: 
        msg: "{{ dup.stdout }}"

    - name: Compliant
      debug:
        msg: "9.2 is compliant"
      when: dup.stdout == ""
      register: compliant
      ignore_errors: true

    - name: isCompliant
      debug:
        msg: "9.2 is compliant"
      register: isCompliant
      when: compliant.msg == "9.2 is compliant"
      ignore_errors: true

    - name: isNotCompliant
      debug:
        msg: "9.2 is non-compliant"
      when: compliant.skipped == true
      ignore_errors: true
      register: isNotCompliant

    - name: Final (Not comply)
      debug:
        msg: |
          9.2 is not compliant
          Correct or justify any items discovered in the Audit step. Determine if there are any duplicate user names, and work with their respective owners to determine the best course of action in accordance with site policy.
      when: isNotCompliant.msg == "9.2 is non-compliant"
      ignore_errors: true

    - name: Final (Comply)
      debug:
        msg: "9.2 is compliant"
      when: isCompliant.msg == "9.2 is compliant"
      ignore_errors: true


    